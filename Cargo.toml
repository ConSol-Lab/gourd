# Cargo.toml for the Gourd project. Check the maintainer documentation.

[package]
name = "gourd"
version = "0.8.0"
edition = "2021"
default-run = "gourd"
authors = [
  "Mikołaj Gazeel <m.j.gazeel@student.tudelft.nl>",
  "Lukáš Chládek <l@chla.cz>",
  "Ανδρέας Τσατσάνης <a.tsatsanis@student.tudelft.nl>",
  "Jan Piotrowski <me@jan.wf>",
  "Rūta Giedrytė <r.giedryte@student.tudelft.nl>"
]

build = "build.rs"

[features]
# Compile the documentation with this flag.
documentation = []

# Include built-in examples with this flag.
builtin-examples = ["tar", "flate2"]

# Include fetching of HTTP resources and Git repositories.
# Note that 'git2' is otherwise included with no default features (https/ssh)
fetching = ["reqwest", "git2/default"]

default = ["fetching", "builtin-examples"]

# The Gourd command-line application.
[[bin]]
name = "gourd"
path = "src/gourd/main.rs"

# The Gourd wrapper, which is used as an intermediary for executing and profiling binaries.
[[bin]]
name = "gourd_wrapper"
path = "src/gourd_wrapper/main.rs"

# The Gourd library, which contains definitions and commons for both Gourd and its wrapper.
[lib]
name = "gourd_lib"
path = "src/gourd_lib/lib.rs"

[[test]]
name = "cli-integration"
path = "src/integration/mod.rs"

[target.'cfg(unix)'.dependencies]
# On Linux, macOS, BSD: to perform syscalls to get usage metrics.
libc = "0.2"

[target.'cfg(target_os = "linux")'.dependencies]
# On Linux: to verify that user-provided ELF binaries match the architecture.
elf = "0.7.4"

[dependencies]

# To execute threads locally using a thread-pool executor.
tokio = { version = "1", features = ["full"] }

# To encode/decode data in gourd.toml and other Gourd files.
toml = "0.8.12"
serde = { version = "1.0", features = ["derive"] }
chrono = { version = "0.4", features = ["serde"] }
glob = "0.3.1"
regex-lite = "0.1.5"

# To load datasets and executables from the internet.
reqwest = { version = "0.12.4", features = ["blocking", "json"], optional = true }

# To provide a user-friendly CLI.
clap = { version = "4.5.4", features = ["derive", "cargo"] }
anstyle = "1.0.7"
indicatif = "0.17.8"
indicatif-log-bridge = "0.2.2"
inquire = "0.7.5"

# To provide human-readable formatting of durations.
humantime = "2.1.0"

# To handle errors.
anyhow = "1"
thiserror = "1"

# To store temporary files.
tempdir = "0.3.7"

# To log to stdout.
log = { version = "0.4", features = [] }
colog = "1.3.0"

# To (de)compress example folders
flate2 = "1.0"
tar = "0.4"

# To initialise Git repositories
git2 = { version = "0.18.3", default-features = false }

[build-dependencies]
# To generate shell completions for the CLI.
clap_complete = "4.5.2"
clap = { version = "4.5.4", features = ["derive", "cargo", "string"] }
anstyle = "1.0.7"

# To (de)compress example folders
flate2 = { version = "1.0", optional = true}
tar = { version = "0.4", optional = true }

# To handle errors.
anyhow = "1"

serde = { version = "1.0", features = ["derive"] }

toml = "0.8.12"

[dev-dependencies]
# To run benchmarks on stable rust.
easybench = "1.1.1"

[lints.rust]
missing_docs = "warn"
missing_debug_implementations = "warn"
missing_copy_implementations = "warn"
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(tarpaulin_include)'] }

[lints.clippy]
redundant_static_lifetimes = "allow"
missing_docs_in_private_items = "warn"
