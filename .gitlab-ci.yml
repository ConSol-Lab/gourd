default:
  image: rust:1.77.2-alpine3.18

variables:
  CARGO_HOME: $CI_PROJECT_DIR/.cargo

.rust_container_template: &rust_container_stable
  image: ghcr.io/mgazeel/muslrust-texlive:amd64-1.78.0-stable-2024-06-05-2
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - $CARGO_HOME

.rust_container_template: &rust_container_night
  image: ghcr.io/mgazeel/muslrust-texlive:amd64-1.80.0-nightly-2024-06-05-2
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - $CARGO_HOME

.latex_container_template: &texlive_full
  image: ghcr.io/xu-cheng/texlive-full:20240315

stages:
  - build
  - lint
  - test
  - docs

check:
  <<: *rust_container_stable
  stage: build
  script:
    - cargo check --release

build:
  <<: *rust_container_stable
  stage: build
  needs:
  - check
  script:
  - cargo build --verbose --release
  - mv target/x86_64-unknown-linux-musl/release/gourd gourd
  - mv target/x86_64-unknown-linux-musl/release/gourd_wrapper gourd_wrapper
  - mkdir completions
  - mv target/x86_64-unknown-linux-musl/release/completions/* ./completions/
  artifacts:
    when: on_success
    name: binaries (musl-x86_64)
    expose_as: binaries
    paths:
      - gourd
      - gourd_wrapper
      - completions/

fmt:
  <<: *rust_container_night
  stage: lint
  needs:
    - build
  script:
    - cargo fmt -- --check
  allow_failure: true

clippy:
  <<: *rust_container_stable
  stage: lint
  needs:
    - build
  script:
    - cargo clippy --release --no-deps --all-targets -- -D warnings
  allow_failure: true


coverage:
  <<: *rust_container_night
  stage: test
  needs:
    - build
  script:
    - cargo tarpaulin --engine llvm --out Xml --root . --manifest-path Cargo.toml
  coverage: '/\d+.\d+\% coverage,.*lines covered/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: cobertura.xml
  allow_failure: true

tests:
  <<: *rust_container_night
  stage: test
  needs:
    - build
  script:
    - cargo test -- -Z unstable-options --format json --report-time | cargo2junit > results.xml
  artifacts:
    when: always
    paths:
      - results.xml
    reports:
      junit: results.xml

rustdoc:
  <<: *rust_container_stable
  stage: docs
  needs: [build]
  script:
    - cargo doc --release --document-private-items
  allow_failure: true
  artifacts:
    when: on_success
    access: all
    name: rustdoc
    expose_as: rustdoc
    paths:
      - target/x86_64-unknown-linux-musl/doc/

documentation:
  <<: *texlive_full
  stage: docs
  allow_failure: true
  needs: []
  before_script:
    - apk --no-cache add rust cargo mandoc
  script:
    - cargo build --release --no-default-features --features documentation -vv
    - mkdir documentation/
    - mv target/release/manpages/* documentation/
  artifacts:
    when: on_success
    name: maintainer documentation
    expose_as: maintainer documentation
    paths:
      - documentation/
