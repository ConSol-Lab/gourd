name: ready

on:
  workflow_dispatch:
  pull_request:
    types: [synchronize, review_requested, labeled]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    if: ${{ contains(github.event.pull_request.labels.*.name, 'ready') || github.event.pull_request.reviewers != ''}}
    runs-on: ubuntu-latest

    steps:
      - name: Prepare
        uses: actions/checkout@v4
      - name: Gather rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Build
        run: cargo build --release --verbose

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: |
            target/release/gourd
            target/release/gourd_wrapper
          retention-days: 2
        continue-on-error: true

  test_lint:
    if: ${{ contains(github.event.pull_request.labels.*.name, 'ready') || github.event.pull_request.reviewers != ''}}
    runs-on: ubuntu-latest

    steps:
      - name: Prepare
        uses: actions/checkout@v4
      - name: Gather rust nightly
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: clippy, rustfmt

      - name: Prepare cargo2junit
        uses: baptiste0928/cargo-install@v3
        with:
          crate: cargo2junit
          locked: false

      - name: Formatting
        run: cargo fmt -- --check
      - name: Clippy
        run: cargo clippy --release --no-deps --all-targets -- -D warnings

      - name: Cargo Test
        run: cargo test --release -- --nocapture -Z unstable-options --format json --report-time | cargo2junit > results.xml

      - name: Upload reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: |
            results.xml
          retention-days: 7
        continue-on-error: true

  documentation:
    if: ${{ contains(github.event.pull_request.labels.*.name, 'ready') || github.event.pull_request.reviewers != ''}}
    runs-on: ubuntu-latest

    steps:
      - name: Prepare
        uses: actions/checkout@v4
      - name: Gather rust nightly
        uses: dtolnay/rust-toolchain@nightly

      - name: Rustdoc
        run: cargo doc --no-deps --release --document-private-items

      - name: Upload rustdoc
        uses: actions/upload-artifact@v4
        with:
          name: rustdoc
          path: |
            target/doc/
        continue-on-error: true

      - name: Prepare fonts
        uses: ConorMacBride/install-package@v1
        with:
          apt: fonts-linuxlibertine mandoc

      - name: Prepare texlive
        uses: teatimeguest/setup-texlive-action@v3
        with:
          packages: |
            cleveref
            hyperref
            xetex
            amsmath
            a4wide
            ntgclass
            verbatim
            changepage
            amsfonts
            mathspec
            pgf
            framed
            caption
            geometry
            listings
            isodate
            parskip
            tools
            titlesec
            etoolbox
            fancyhdr
            fontspec
            xkeyval
            substr
            latex2man

      - name: Documentation
        run: cargo build --release --features "documentation documentation-latex" -vv

      - name: Upload documentation
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: |
            target/release/manpages/
          retention-days: 5
        continue-on-error: true
